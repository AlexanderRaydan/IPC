////////////////////////////////////////////////////////////////////////////

                              Reflection
                             Workshop - #5

Full Name  : Alexander David Raydan Gonzalez
Student ID#: 124348236
Email      : adraydan-gonzalez@myseneca.ca
Section    : ZBB

Authenticity Declaration:

I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.

///////////////////////////////////////////////////////////////////////////

1. Why do we try to use variables and macros to represent information rather than hardcode “magic” numbers (constant literals)? Using the details of this workshop, describe at least three advantages this provides us?

First, we know what represents this number if you use a variable, if we see “year < MIN_YEAR” we are going to know that the year has to be less than the minimum year, but if we use just “year < 2012” we do not know why to represent 2012.

Second, we can print the variable value when we want to show the year number instead of writing one “if” and condition for every year.

Third, if we want to change the value of one variable in the future, we do not need to change this value in every part of the code, just change the value in the init of the program and go to skill working without problem. For example, 
if we want to change MAX_YEAR, we just need to change the value in the init of the program, not in every part when we used this variable.


2. The rating values entered by the user required iteration to perform basic validations with each iteration concentrated on testing for values to be within a specific range. Why do we not include additional logic that sums and performs 
the average? Instead, the sum and average logic is placed outside of any validation routine. Briefly explain two reasons why this is better design and refer to the details of this workshop to justify your answer.

First, we need to validate the value before doing any operation with this value. If we create an operation using the wrong values, the computer going to do this operation for nothing because we going to do the same process again with 
a new value in the next iteration. In this workshop, the rating value has to be between MIN_RAITING and MAX_RAITING, if this condition is false, we have to request a new value immediately, if we calculate the average with this value, we are doing a 
pointless operation because this value never going to used.

Second, we just need to know the total average when we have the total value, it is not necessary to get the average in every iteration because we are not going to use this value, just the final average. In this workshop, calculate the
average for each average and sum, if the same calculate the average of the total value and just need to calculate the average one time instead of 3 times. 


